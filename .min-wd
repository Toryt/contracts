const build = `manual ${new Date().toISOString()}`
console.log(`build: ${build}`)

const capabilitiesBase = {
  project: 'Toryt contracts',
  build: build,
  'browserstack.user': process.env.BROWSERSTACK_USERNAME,
  'browserstack.key': process.env.BROWSERSTACK_ACCESS_KEY
}

const osVersion = {
  'OS X': 'High Sierra',
  'Windows': '10'
}

/* We only test the last version of every combination, by not specifying any version.
   By running the tests every week, we stay compatible. */
const desktop = [
  {browser: 'Chrome', os: 'OS X', os_version: 'High Sierra'},
  {browser: 'Chrome', os: 'Windows'},
  {browser: 'Firefox', os: 'OS X'},
  {browser: 'Firefox', os: 'Windows'},
  {browser: 'Safari', os: 'OS X'},
  {browser: 'Edge', os: 'Windows'}
]
  .map(d => ({
    name: `${d.browser} - ${d.os}`,
    capabilities: Object.assign(d, capabilitiesBase, {os_version: osVersion[d.os]})
  }))

const mobile = [
  'Samsung Galaxy S9',
  'Samsung Galaxy Note 4',
  'iPhone X',
  'iPad Pro'
]
  .map(m => ({
    name: m,
    capabilities: Object.assign(
      {
        device: m,
        real_mobile: true
      },
      capabilitiesBase
    )
  }))

const definitions = desktop.concat(mobile)
console.log(`${definitions.length}:`, definitions.map(d => d.name).join(', '))

module.exports = {
  "hostname": "hub-cloud.browserstack.com",
  "port": 80,
  "browsers": definitions
}
